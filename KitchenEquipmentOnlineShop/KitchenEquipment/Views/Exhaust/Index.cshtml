@using KitchenEquipment.Extension
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<KitchenEquipment.Models.ExhaustHoodViewModel>

<div class="table-wrapper">
    <div class="table-title">
        <div class="row">
            <div class="col-sm-6">
                <h2>Вытяжки: <b>Модерн</b> </h2>
            </div>
            <div class="col-sm-6">
                <a href="@Url.Action("Create", "Exhaust", new { url = @Context.Request.QueryString })" class="btn btn-success viewDialog" data-toggle="modal"><i class="material-icons">&#xE147;</i> <span>Добавить</span></a>
            </div>
        </div>
    </div>
    <table class="table table-striped table-hover table-condensed table-sm text-center">
        <thead>
            <tr>
                <th>Изображение</th>
                <th>@Html.DropDownList("CompanyName", ViewBag.Companies as SelectList, "Фирма", new { @class = "btn btn-light font-weight-bold", onchange = "CallChangefunc(this.value)" })</th>
                <th>Название</th>
                <th>Тип</th>
                <th>Ширина</th>
                <th>Цвет</th>
                <th>Цена</th>
                <th>Описание</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var key in Model)
            {
                <tr>
                    <td>
                        @Html.Raw("<img style='width:80px; height:60px;' src=\"data:image/jpeg;base64,"
                                  + Convert.ToBase64String(key.Image) + "\" />")
                    </td>
                    <td>@key.CompanyName</td>
                    <td>@key.Name</td>
                    <td>@key.Type.GetDisplayName()</td>
                    <td>@key.Width</td>
                    <td>@key.Color</td>
                    <td>@key.Price</td>
                    <td class="text-left">@key.Description</td>
                    <td>
                        <a href="@Url.Action("Edit", "Exhaust", new {id = key.Id, url = @Context.Request.QueryString })" class="viewDialog"><i class="material-icons" data-toggle="tooltip" title="Edit">&#xE254;</i></a>
                        <a href="@Url.Action("Delete", "Exhaust", new {id = key.Id, url = @Context.Request.QueryString })" class="viewDialog"><i class="material-icons" data-toggle="tooltip" title="Delete">&#xE872;</i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="clearfix">
        Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount
        <div id="contentPager">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { exhaustType = @Context.Request.Query["exhaustType"], page = page }),
                new PagedListRenderOptions {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
        </div>
    </div>
</div>

<div id="mainModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="mainDialogContent">
            </div>
        </div>
    </div>
</div>

<script>
    function CallChangefunc(val) {
        $('#ajax-content').load('@Url.Action("Index", "Exhaust", new { exhaustType = @Context.Request.Query["exhaustType"] })&companyId=' + val);
    }
</script>
<script src="~/assets/js/pager.js"></script>
<script src="~/assets/js/jquery-ui.min.js"></script>
<script src="~/assets/js/modal.js"></script>